
package framework.integrations.gwServices.debugToolsAPI.ab;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ABDebugToolsAPI", targetNamespace = "http://guidewire.com/ab/ws/gw/webservice/ab/ab1000/abdebugtoolsapi/ABDebugToolsAPI", wsdlLocation = "http://ab8dev/ab/ws/gw/webservice/ab/ab1000/abdebugtoolsapi/ABDebugToolsAPI?WSDL")
public class ABDebugToolsAPI
    extends Service
{

    private final static URL ABDEBUGTOOLSAPI_WSDL_LOCATION;
    private final static WebServiceException ABDEBUGTOOLSAPI_EXCEPTION;
    private final static QName ABDEBUGTOOLSAPI_QNAME = new QName("http://guidewire.com/ab/ws/gw/webservice/ab/ab1000/abdebugtoolsapi/ABDebugToolsAPI", "ABDebugToolsAPI");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://ab8dev/ab/ws/gw/webservice/ab/ab1000/abdebugtoolsapi/ABDebugToolsAPI?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ABDEBUGTOOLSAPI_WSDL_LOCATION = url;
        ABDEBUGTOOLSAPI_EXCEPTION = e;
    }

    public ABDebugToolsAPI() {
        super(__getWsdlLocation(), ABDEBUGTOOLSAPI_QNAME);
    }

    public ABDebugToolsAPI(WebServiceFeature... features) {
        super(__getWsdlLocation(), ABDEBUGTOOLSAPI_QNAME, features);
    }

    public ABDebugToolsAPI(URL wsdlLocation) {
        super(wsdlLocation, ABDEBUGTOOLSAPI_QNAME);
    }

    public ABDebugToolsAPI(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ABDEBUGTOOLSAPI_QNAME, features);
    }

    public ABDebugToolsAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ABDebugToolsAPI(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ABDebugToolsAPIPortType
     */
    @WebEndpoint(name = "ABDebugToolsAPISoap11Port")
    public ABDebugToolsAPIPortType getABDebugToolsAPISoap11Port() {
        return super.getPort(new QName("http://guidewire.com/ab/ws/gw/webservice/ab/ab1000/abdebugtoolsapi/ABDebugToolsAPI", "ABDebugToolsAPISoap11Port"), ABDebugToolsAPIPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ABDebugToolsAPIPortType
     */
    @WebEndpoint(name = "ABDebugToolsAPISoap11Port")
    public ABDebugToolsAPIPortType getABDebugToolsAPISoap11Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://guidewire.com/ab/ws/gw/webservice/ab/ab1000/abdebugtoolsapi/ABDebugToolsAPI", "ABDebugToolsAPISoap11Port"), ABDebugToolsAPIPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ABDEBUGTOOLSAPI_EXCEPTION!= null) {
            throw ABDEBUGTOOLSAPI_EXCEPTION;
        }
        return ABDEBUGTOOLSAPI_WSDL_LOCATION;
    }

}
