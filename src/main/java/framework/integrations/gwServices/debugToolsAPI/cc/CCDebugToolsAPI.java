
package framework.integrations.gwServices.debugToolsAPI.cc;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CCDebugToolsAPI", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc700/ccdebugtools/CCDebugToolsAPI", wsdlLocation = "http://cc8dev/cc/ws/gw/webservice/cc/cc700/ccdebugtools/CCDebugToolsAPI?WSDL")
public class CCDebugToolsAPI
    extends Service
{

    private final static URL CCDEBUGTOOLSAPI_WSDL_LOCATION;
    private final static WebServiceException CCDEBUGTOOLSAPI_EXCEPTION;
    private final static QName CCDEBUGTOOLSAPI_QNAME = new QName("http://guidewire.com/cc/ws/gw/webservice/cc/cc700/ccdebugtools/CCDebugToolsAPI", "CCDebugToolsAPI");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://cc8dev/cc/ws/gw/webservice/cc/cc700/ccdebugtools/CCDebugToolsAPI?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CCDEBUGTOOLSAPI_WSDL_LOCATION = url;
        CCDEBUGTOOLSAPI_EXCEPTION = e;
    }

    public CCDebugToolsAPI() {
        super(__getWsdlLocation(), CCDEBUGTOOLSAPI_QNAME);
    }

    public CCDebugToolsAPI(WebServiceFeature... features) {
        super(__getWsdlLocation(), CCDEBUGTOOLSAPI_QNAME, features);
    }

    public CCDebugToolsAPI(URL wsdlLocation) {
        super(wsdlLocation, CCDEBUGTOOLSAPI_QNAME);
    }

    public CCDebugToolsAPI(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CCDEBUGTOOLSAPI_QNAME, features);
    }

    public CCDebugToolsAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CCDebugToolsAPI(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "CCDebugToolsAPISoap11Port")
    public CCDebugToolsAPIPortType getCCDebugToolsAPISoap11Port() {
        return super.getPort(new QName("http://guidewire.com/cc/ws/gw/webservice/cc/cc700/ccdebugtools/CCDebugToolsAPI", "CCDebugToolsAPISoap11Port"), CCDebugToolsAPIPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "CCDebugToolsAPISoap11Port")
    public CCDebugToolsAPIPortType getCCDebugToolsAPISoap11Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://guidewire.com/cc/ws/gw/webservice/cc/cc700/ccdebugtools/CCDebugToolsAPI", "CCDebugToolsAPISoap11Port"), CCDebugToolsAPIPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CCDEBUGTOOLSAPI_EXCEPTION!= null) {
            throw CCDEBUGTOOLSAPI_EXCEPTION;
        }
        return CCDEBUGTOOLSAPI_WSDL_LOCATION;
    }

}
