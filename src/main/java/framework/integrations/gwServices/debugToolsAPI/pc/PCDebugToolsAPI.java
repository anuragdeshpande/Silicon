
package framework.integrations.gwServices.debugToolsAPI.pc;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PCDebugToolsAPI", targetNamespace = "http://guidewire.com/pc/ws/gw/webservice/pc/pc800/pcdebugtools/PCDebugToolsAPI", wsdlLocation = "http://pc8dev/pc/ws/gw/webservice/pc/pc800/pcdebugtools/PCDebugToolsAPI?WSDL")
public class PCDebugToolsAPI
    extends Service
{

    private final static URL PCDEBUGTOOLSAPI_WSDL_LOCATION;
    private final static WebServiceException PCDEBUGTOOLSAPI_EXCEPTION;
    private final static QName PCDEBUGTOOLSAPI_QNAME = new QName("http://guidewire.com/pc/ws/gw/webservice/pc/pc800/pcdebugtools/PCDebugToolsAPI", "PCDebugToolsAPI");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://pc8dev/pc/ws/gw/webservice/pc/pc800/pcdebugtools/PCDebugToolsAPI?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PCDEBUGTOOLSAPI_WSDL_LOCATION = url;
        PCDEBUGTOOLSAPI_EXCEPTION = e;
    }

    public PCDebugToolsAPI() {
        super(__getWsdlLocation(), PCDEBUGTOOLSAPI_QNAME);
    }

    public PCDebugToolsAPI(WebServiceFeature... features) {
        super(__getWsdlLocation(), PCDEBUGTOOLSAPI_QNAME, features);
    }

    public PCDebugToolsAPI(URL wsdlLocation) {
        super(wsdlLocation, PCDEBUGTOOLSAPI_QNAME);
    }

    public PCDebugToolsAPI(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PCDEBUGTOOLSAPI_QNAME, features);
    }

    public PCDebugToolsAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PCDebugToolsAPI(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "PCDebugToolsAPISoap11Port")
    public PCDebugToolsAPIPortType getPCDebugToolsAPISoap11Port() {
        return super.getPort(new QName("http://guidewire.com/pc/ws/gw/webservice/pc/pc800/pcdebugtools/PCDebugToolsAPI", "PCDebugToolsAPISoap11Port"), PCDebugToolsAPIPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "PCDebugToolsAPISoap11Port")
    public PCDebugToolsAPIPortType getPCDebugToolsAPISoap11Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://guidewire.com/pc/ws/gw/webservice/pc/pc800/pcdebugtools/PCDebugToolsAPI", "PCDebugToolsAPISoap11Port"), PCDebugToolsAPIPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PCDEBUGTOOLSAPI_EXCEPTION!= null) {
            throw PCDEBUGTOOLSAPI_EXCEPTION;
        }
        return PCDEBUGTOOLSAPI_WSDL_LOCATION;
    }

}
