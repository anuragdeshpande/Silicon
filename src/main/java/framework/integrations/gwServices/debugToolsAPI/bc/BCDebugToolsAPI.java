package framework.integrations.gwServices.debugToolsAPI.bc;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.3
 * 2021-05-24T12:55:28.486-06:00
 * Generated source version: 3.4.3
 *
 */
@WebServiceClient(name = "BCDebugToolsAPI",
                  wsdlLocation = "file:/C:/Users/anura/IdeaProjects/Silicon/src/main/java/framework/integrations/gwServices/debugToolsAPI/bc/BCDebugTools.wsdl",
                  targetNamespace = "http://guidewire.com/bc/ws/gw/webservice/policycenter/bc1000/BCDebugToolsAPI")
public class BCDebugToolsAPI extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://guidewire.com/bc/ws/gw/webservice/policycenter/bc1000/BCDebugToolsAPI", "BCDebugToolsAPI");
    public final static QName BCDebugToolsAPISoap11Port = new QName("http://guidewire.com/bc/ws/gw/webservice/policycenter/bc1000/BCDebugToolsAPI", "BCDebugToolsAPISoap11Port");
    public final static QName BCDebugToolsAPISoap12Port = new QName("http://guidewire.com/bc/ws/gw/webservice/policycenter/bc1000/BCDebugToolsAPI", "BCDebugToolsAPISoap12Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/anura/IdeaProjects/Silicon/src/main/java/framework/integrations/gwServices/debugToolsAPI/bc/BCDebugTools.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BCDebugToolsAPI.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/anura/IdeaProjects/Silicon/src/main/java/framework/integrations/gwServices/debugToolsAPI/bc/BCDebugTools.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public BCDebugToolsAPI(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BCDebugToolsAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BCDebugToolsAPI() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BCDebugToolsAPI(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BCDebugToolsAPI(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BCDebugToolsAPI(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "BCDebugToolsAPISoap11Port")
    public BCDebugToolsAPIPortType getBCDebugToolsAPISoap11Port() {
        return super.getPort(BCDebugToolsAPISoap11Port, BCDebugToolsAPIPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "BCDebugToolsAPISoap11Port")
    public BCDebugToolsAPIPortType getBCDebugToolsAPISoap11Port(WebServiceFeature... features) {
        return super.getPort(BCDebugToolsAPISoap11Port, BCDebugToolsAPIPortType.class, features);
    }


    /**
     *
     * @return
     *     returns BCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "BCDebugToolsAPISoap12Port")
    public BCDebugToolsAPIPortType getBCDebugToolsAPISoap12Port() {
        return super.getPort(BCDebugToolsAPISoap12Port, BCDebugToolsAPIPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BCDebugToolsAPIPortType
     */
    @WebEndpoint(name = "BCDebugToolsAPISoap12Port")
    public BCDebugToolsAPIPortType getBCDebugToolsAPISoap12Port(WebServiceFeature... features) {
        return super.getPort(BCDebugToolsAPISoap12Port, BCDebugToolsAPIPortType.class, features);
    }

}
